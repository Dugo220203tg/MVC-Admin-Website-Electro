@model TrangQuanLy.Models.HangHoaVM
@{
    ViewData["Title"] = "Index";
    Layout = "_Footer-Header";
}
<div class="container-fluid pt-4 px-4">
    <div class="bg-secondary rounded h-100 p-4">
        <h5 class="mb-4">Thêm sản phẩm</h5>
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div class="form-content">
                <div class="form-fields">
                    <div class="form-group">
                        <label asp-for="TenHH" class="form-label">Tên sản phẩm</label>
                        <input asp-for="TenHH" class="form-control" />
                        <span asp-validation-for="TenHH" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="MaLoai" class="control-label">Loại sản phẩm</label>
                        <select id="selectLoaiSp" class="form-select form-select-sm mb-3" aria-label=".form-select-sm example">
                            <option selected="">Chọn nhà cung cấp</option>
                            @await Component.InvokeAsync("LoaiSp")
                        </select>
                        <input id="inputValueLoaiSp" style="display:none;" type="text" class="form-control" name="MaLoai" readonly asp-for="MaLoai">
                    </div>
                    <input asp-for="MaLoai" class="form-control" style="display:none" />

                    <div class="mb-3">
                        <label asp-for="MaNCC" class="control-label">Nhà cung cấp</label>
                        <select id="selectNCC" class="form-select form-select-sm mb-3" aria-label=".form-select-sm example">
                            <option selected="">Chọn nhà cung cấp</option>
                            @await Component.InvokeAsync("HangSp")
                        </select>
                        <input id="inputValueNCC" style="display:none;" type="text" class="form-control" name="MaNCC" readonly asp-for="MaNCC">
                    </div>
                    <input asp-for="MaNCC" class="form-control" style="display:none" />
                    <div class="form-group">
                        <label asp-for="MoTa" class="control-label">Mô tả</label>
                        <input asp-for="MoTa" class="form-control" />
                        <span asp-validation-for="MoTa" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="MoTaDonVi" class="control-label">Mô tả ngắn (đơn vị)</label>
                        <input asp-for="MoTaDonVi" class="form-control" />
                        <span asp-validation-for="MoTaDonVi" class="text-danger"></span>
                    </div>
                    <label asp-for="DonGia" class="control-label">Đơn giá</label>
                    <div class="input-group mb-3">
                        <span class="input-group-text">$</span>
                        <input asp-for="DonGia" class="form-control" />
                        <span asp-validation-for="DonGia" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label my-3" asp-for="@Model.NgaySX" style="margin-top: 0rem !important;margin-bottom: 0rem !important;"></label>
                        <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                            <input asp-for="@Model.NgaySX" type="text" class="form-control" data-target="#datetimepicker1" />
                            <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                        <span asp-validation-for="@Model.NgaySX" class="text-danger"></span>
                    </div>
                </div>
                <div class="image-content">
                    <div id="imageInputsContainer">
                        <!-- Hiển thị các ảnh hiện có (nếu có) và trường nhập cho ảnh mới -->
                        @if (Model != null && !string.IsNullOrEmpty(Model.Hinh))
                        {
                            var imageUrls = Model.Hinh.Split(',');
                            for (int i = 0; i < imageUrls.Length; i++)
                            {
                                <div class="image-input-group mb-3">
                                    <div class="image-preview-item">
                                        <img src="~/Hinh/Hinh/HangHoa/@Model.MaHH/@imageUrls[i]" alt="@Model.TenHH" class="preview-image">
                                        <p class="image-name">@imageUrls[i]</p>
                                    </div>
                                    <div class="input-group input-group-img">
                                        <input type="file" class="form-control bg-dark image-input" name="ImageFiles" onchange="previewImage(this)" data-index="@i">
                                        <button type="button" class="btn btn-danger remove-image" onclick="removeImageInput(this)">Xóa</button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <button type="button" class="btn btn-primary mt-3" onclick="addNewImageInput()">Thêm hình ảnh</button>

                    <!-- Thêm trường ẩn để chứa danh sách các tên ảnh -->
                    <input type="hidden" name="Hinh" value="@Model?.Hinh" />
                </div>

                <div class="form-group submit-button">
                    <input type="submit" value="Tạo" class="btn btn-primary" />
                </div>
            </div>
        </form>
        <a asp-action="Index" class="close-button">X</a>
    </div>
</div>
@section Scripts {
    @{
        <script>
            function previewImage(input) {
                if (input.files && input.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const previewItem = input.closest('.image-input-group').querySelector('.image-preview-item');
                        previewItem.innerHTML = '';

                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'preview-image';
                        img.alt = 'Preview';

                        const p = document.createElement('p');
                        p.className = 'image-name';
                        p.textContent = input.files[0].name;

                        previewItem.appendChild(img);
                        previewItem.appendChild(p);

                        updateExistingImageNames();
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }

            function addNewImageInput() {
                const container = document.getElementById('imageInputsContainer');
                const newIndex = container.children.length;

                const newGroup = document.createElement('div');
                newGroup.className = 'image-input-group mb-3';
                newGroup.innerHTML = `
                        <div class="image-preview-item"></div>
                        <div class="input-group input-group-img">
                            <input type="file" class="form-control bg-dark image-input" name="ImageFiles" onchange="previewImage(this)" data-index="${newIndex}">
                            <button type="button" class="btn btn-danger remove-image" onclick="removeImageInput(this)">Xóa</button>
                        </div>`;

                container.appendChild(newGroup);
            }

            function removeImageInput(button) {
                const group = button.closest('.image-input-group');
                group.remove();
                updateExistingImageNames();
            }

            function updateExistingImageNames() {
                const imageNames = Array.from(document.querySelectorAll('.image-name')).map(el => el.textContent);
                document.getElementById('existingImageNames').value = imageNames.join(',');
            }

            if (document.getElementById('imageInputsContainer').children.length === 0) {
                addNewImageInput();
            }
            updateExistingImageNames();</script>
    }
}